# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main  # Trigger the pipeline on changes to the 'main' branch

pool:
  vmImage: 'ubuntu-latest' 
variables:
  DOCKER_IMAGE: 'cryptovisionops'
  DOCKER_PORT: '8000'

stages:
- stage: Build
  displayName: "Build and Test"
  jobs:
  - job: Build
    displayName: "Build Job"
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x' 
        addToPath: true

    - script: |
        echo "Installing dependencies..."
        pip install -r requirements.txt
      displayName: "Install Dependencies"

    - script: |
        echo "Running tests..."
        pytest tests/
      displayName: "Run Tests"

    - task: Docker@2
      displayName: "Build Docker Image"
      inputs:
        command: build
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(DOCKER_IMAGE)
        Dockerfile: '**/Dockerfile'
        tags: |
          latest
          $(Build.BuildId)

- stage: Deploy
  displayName: "Deploy Application"
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: "Deploy Job"
    steps:
    - script: |
        echo "Deploying application..."
        docker run -d --name $(DOCKER_IMAGE) -p $(DOCKER_PORT):8000 $(DOCKER_IMAGE)
      displayName: "Run Docker Container"
